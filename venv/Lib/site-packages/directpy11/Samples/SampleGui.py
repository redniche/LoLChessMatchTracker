
"""GUI sample.""" 

import time
import sys

import d3d11
import d3d11x
import d3d11gui as gui
from d3d11c import *

class SampleGUI(d3d11x.Frame):
    def onCreate(self):
        self.manager = gui.Manager(self.device, self.window)
        
        root = gui.Window(self.manager, d3d11x.Rect(250, 100, 500, 400))
        root.title = "Window 1"
        
        root2 = gui.Window(self.manager, d3d11x.Rect(10, 10, 400, 450))
        
        text = gui.Label(root2, d3d11x.Rect(10, 10, 300, 100))
        text.setAnchor((10, None, 10, None))
        text.titleColor = (1, 1, 0, 1)
        text.title = "This is a sample"
        text.text = "This control has an anchor attached and will be resized horizontally if the parent window is resized."
        
        edit = gui.TextBox(root2, d3d11x.Rect(10, 140, 300, 250))
        edit.text = "You can edit the contents of this text box in many ways.\n\nPress the right mouse key on an empty space to open a menu."
        
        image = gui.Image(root, d3d11x.Rect(300, 50, 1, 1), d3d11x.getResourceDir("Textures", "misc-moon.png"), (50, 50))
        image.text = "Image"
        image.textColor = (1, 0, 0, 0.75)
        
        button = gui.Button(root, d3d11x.Rect(10, 20, 100, 35), "Hello")
        button.onClick = self.onHello
        
        #You can store custom objects into some widgets. Anything
        #which can be converted to a string is OK.
        class Dummy:
            def __init__(self, i):
                self.i = i
            def __str__(self):
                return "Item %i" % self.i
        
        choices = gui.Choice(root, d3d11x.Rect(10, 60, 200, 30))
        choices.onChoice = self.onChoice
        for x in range(5):
            choices.add(Dummy(x))
        
        group = gui.CheckBoxGroup(root, d3d11x.Rect(10, 120, 150, 200))
        group.onCheck = self.onCheck
        for x in range(3):
            group.add(Dummy(x))
        group.check(1, True)
        
        radio = gui.RadioGroup(root, d3d11x.Rect(200, 120, 150, 200))
        radio.onSelect = self.onSelect
        for x in range(3):
            radio.add(Dummy(x))
        radio.select(2)
        
        slider = gui.Slider(root, d3d11x.Rect(20, 250, 200, 8))
        slider.range = 100
        slider.drawConnectors = 1
        slider.addSelector(gui.Selector(0, 50))
        slider.addSelector(gui.Selector(49, 100, 99))  
        slider.onSlide = self.onSlide
        
        slider2 = gui.Slider(root, d3d11x.Rect(250, 250, 100, 8))
        slider2.range = 50
        slider2.addSelector()
        
        scrollBar = gui.ScrollBar(root, d3d11x.Rect(0, 0, 100, 100))
        scrollBar.setScrollData(gui.ScrollData(20, 10, gui.SCROLL_X))
        scrollBar.setScrollData(gui.ScrollData(10, 10, gui.SCROLL_Y))   

        progress = gui.ProgressBar(root, d3d11x.Rect(10, 300, 200, 25))
        progress.throbber = True
        
    def onSlide(self, event, selector):
        print("Slided: %i of %i" % (selector.position, selector.stop))
        
    def onCheck(self, event, index, item, value):
        print("Changed %i (%s) to %s" % (index, item, value))
        
    def onSelect(self, event, index, item):
        print("Selected %i (%s)" % (index, item))
       
    def onChoice(self, event, index, item):
        print("Choosed %i (%s)" % (index, item))
       
    def onHello(self, event):
        print("Hello!")
       
    def onMenuSelect(self, event, index, item):
        print("Selected %s" % item.text)
       
    def onMouse(self, msg):
        if msg.code == WM_RBUTTONDOWN:
            popUp = gui.Menu(self.manager, d3d11x.Rect(msg.x, msg.y, 100, 100))
            popUp.onSelect = self.onMenuSelect
            popUp.hasIcons = True #Use icons.
            popUp.add(gui.MenuItem("First"))
            
            submenu = gui.MenuItem("Menu")
            submenu.items.append(gui.MenuItem("Item 1"))
            submenu.items.append(gui.MenuItem("Item 2"))   
            
            submenu2 = gui.MenuItem("Another submenu (with an icon)")
            submenu2.icon = gui.GUI_IMAGE_X #Add icon for this item.
            submenu2.items.append(gui.MenuItem("Another item"))
            submenu2.items.append(gui.MenuItem("More and more"))
            
            submenu.items.append(submenu2)     
            
            popUp.add(submenu)
        
    def onMessage(self, msg):
        return self.manager.onMessage(msg)
        
    def onRender(self):
        self.manager.render(self.frameTime)
        

if __name__ == "__main__":
    sample = SampleGUI("GUI - DirectPython 11", __doc__)
    sample.mainloop()
