
"""This sample shows how to load and render a simple height map.

You can use your mouse and keyboard to control the camera. Press 'c'
to perform a camera drive."""

import math

import d3d11
import d3d11x
from d3d11c import *
 
def heightCallback(x, z, byteIndex, data):
    return data[byteIndex]
    
class SampleHMap(d3d11x.Frame):
    def onCreate(self):
        #Heightmap.
        self.heightmap = d3d11x.HeightMap(self.device, d3d11x.getResourceDir("Textures", "heightmap.dds"), 
            (64, 64), heightCallback, (1.5, 0.1, 1.5), (8, 8), True)
        self.heightmap.textureView = self.loadTextureView("ground-moss.dds") 

        #Skybox.
        self.skybox = d3d11x.SkyBox(self.device)
        self.skybox.textureView = self.loadTextureView("skybox-clear.dds") 
        
        #User controlled camera.
        self.camera = d3d11x.Camera((0, 20, -80), (0, 10, 0), 1.0)

    def onMessage(self, msg):
        if self.camera.onMessage(msg):
            return True
            
    def onUpdate(self):
        self.camera.onUpdate(self.frameTime)

    def onChar(self, msg):
        if msg.char == "c":
            self.camera.drive((-60, 30, 60), (0, 0, 0))
            
    def onRender(self):
        lights = [((-10, 20, 0), (10, 10, 10, 0))]
        view = self.camera.getViewMatrix() 
        projection = self.createProjection(45, 0.1, 500.0)

        #Skybox first.
        camPos = self.camera.pos
        skyWorld = d3d11.Matrix()
        skyWorld.translate((camPos.x * 0.99, camPos.y - self.skybox.height / 2.0, camPos.z * 0.99))
        self.skybox.render(skyWorld, view, projection)
        
        #Then the height map.
        hmapWorld = d3d11.Matrix()
        self.heightmap.setLights(lights)
        self.heightmap.render(hmapWorld, view, projection)

if __name__ == "__main__":
    sample = SampleHMap("Heightmap - DirectPython 11", __doc__)
    sample.mainloop()
