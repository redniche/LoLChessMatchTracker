
#Import DirectPython modules and constants.
import d3d11
from d3d11c import *

#First we need a window. If you don't want to do any visible
#rendering this could be omitted.
window = d3d11.Window()
window.setTitle("Tutorial 1 - Black window")
window.show(SW_SHOW)

#Then create a Device and tell it to use our window for drawing.
#Use a software WARP-device, in real applications you might
#try hardware first and fall back to software if that fails.
device = d3d11.Device(window, DRIVER_TYPE_WARP)

def mainloop():
    while 1:
        #Check all new messages.
        for msg in window.getMessages():
            if msg.code == WM_DESTROY:
                #Close the application. After you have received
                #this message don't try to use the window,
                #it has been destroyed.
                return
             
        #Set default render targets. This also clears the
        #render target to black and depth stencil buffer to 1.0
        device.setRenderTargetsDefault()
        
        #Present our rendering to the window. Because nothing 
        #has been drawn you will see a black window.
        #The argument '1'-tells the device to wait for 1
        #vertical syncronization before presenting.
        device.present(1)
            
#Start the mainloop.            
mainloop()
